apply plugin: 'com.android.application'

// 得到当前时间的字符串 用于发包的时候拼接命名
// 关于语言的实现参考 groovy def定义无类型的变量 返回值无类型的方法
def static releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.rjzd.baby"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // dex突破65535的限制
        multiDexEnabled true

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }

        // 极光推送相关配置
        /*manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "9c65f92724b24f36df24159e", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "yiyanf"
        ]*/

        // 解决studio3.0 上Butterknife报错问题
        /*javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
            }
        }*/
    }

    // 打包签名相关信息
    signingConfigs {
        debug {
            storeFile file('rjzd.keystore')
            storePassword rootProject.properties['RELEASE_STORE_PASSWORD']
            keyAlias rootProject.properties['RELEASE_KEY_ALIAS']
            keyPassword rootProject.properties['RELEASE_KEY_PASSWORD']
        }

        release {
            storeFile file('rjzd.keystore')
            storePassword rootProject.properties['RELEASE_STORE_PASSWORD']
            keyAlias rootProject.properties['RELEASE_KEY_ALIAS']
            keyPassword rootProject.properties['RELEASE_KEY_PASSWORD']
//            v2SigningEnabled false
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }

        release {
            //  release版去除多余的资源，减少apk的体积，俩属性都为true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

    }

    //自动生成指定名称的release发布版的 apk文件
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "babycube_${buildType.name}_${defaultConfig.versionName}_${releaseTime()}.apk"
        }
    }

    // java 版本
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    //Butterknife 依赖
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    //RxJava 依赖
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.3.0'
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'io.reactivex:rxjava:1.1.6'
    //Retrofit2.0 所需要的包
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    //Retrofit2 ConverterFactory的Gson依赖包
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    // Glide 加载图片框架
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    // eventBus依赖
    implementation 'org.greenrobot:eventbus:3.0.0'
    // Logger依赖
    implementation 'com.orhanobut:logger:2.1.0'
    // 解决dex突破65535时候，项目报错
    implementation 'com.android.support:multidex:1.0.3'
    // 腾讯云SDK依赖
    implementation(name: 'LiteAVSDK_Player', ext: 'aar')
    implementation(name: 'liteimsdk-release', ext: 'aar')
    // 弹幕依赖库
    implementation 'com.github.ctiao:DanmakuFlameMaster:0.5.3'


}
